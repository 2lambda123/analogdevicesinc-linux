/* SPDX-License-Identifier: GPL-2.0 */
/*
 * AD4170 ADC driver
 *
 * Copyright 2023 Analog Devices Inc.
 */

/* In development */
#define AD4170_NAME				"ad4170"
/* ADC Register Lengths*/

#define AD4170_READ_MASK BIT(14)
/* AD7124 registers */
#define AD4170_INTERFACE_CONFIG_A_REG	0x00
#define AD4170_INTERFACE_CONFIG_B_REG	0x01
//#define AD4170_DEVICE_CONFIG		  	0x02
//#define AD4170_CHIP_TYPE			0x03
//#define AD4170_PRODUCT_ID_L			0x04
//#define AD4170_PRODUCT_ID_H			0x05
//#define AD4170_CHIP_GRADE			0x06
//#define AD4170_SCRATCH_PAD			0x0a
//#define AD4170_SPI_REVISION			0x0b
//#define AD4170_VENDOR_L				0x0c
//#define AD4170_VENDOR_H				0x0d
#define AD4170_INTERFACE_CONFIG_C_REG	 0x10
#define AD4170_INTERFACE_STATUS_A_REG	 0x11
#define AD4170_STATUS_REG 		 0x14
#define AD4170_DATA_16b			 0x16
#define AD4170_DATA_16b_STATUS		 0x18
#define AD4170_DATA_24b			 0x1c
#define AD4170_DATA_24b_STATUS		 0x20
//#define AD4170_DATA_32b				0x24	
#define AD4170_DATA_PER	_CHANNEL(ch)	 (0x28 + 4 * (ch))
#define AD4170_PIN_MUXING		 0x68
#define AD4170_CLOCK_CTRL		 0x6a
#define AD4170_STANDBY_CTRL		 0x6c
#define AD4170_POWER_DOWN_SW		 0x6e
#define AD4170_ADC_CTRL			 0x70
#define AD4170_ERROR_EN			 0x72
#define AD4170_ERROR			 0x74
//#define AD4170_INFO1			0x76 /* TODO: implement this when it's specified in doc. */
#define AD4170_CHANNEL_EN		 0x78
#define AD4170_CHANNEL_SETUP(ch)	 0x80 + 4 * (ch)
#define AD4170_CHANNEL_MAP(ch)		 (0x82 + 4 * (ch))
#define AD4170_MISC(n)			 (0xc0 + 14 * (n))
#define AD4170_AFE(n)			 (0xc2 + 14 * (n))
#define AD4170_FILTER(n)		 (0xc4 + 14 * (n))
#define AD4170_FILTER_FS(n)		 (0xc6 + 14 * (n))
#define AD4170_OFFSET(n)		 (0xc8 + 14 * (n))
#define AD4170_GAIN(n)			 (0xcb + 14 * (n))
#define AD4170_REF_CONTROL		 0x130
#define AD4170_V_BIAS			 0x134
#define AD4170_I_PULLUP			 0x136
#define AD4170_CURRENT_SOURCE(n)	 (0x138 + 2 * (n))
#define AD4170_FIR_CONTROL		 0x140
#define AD4170_COEFF_WRITE_DATA		 0x144
//#define AD4170_COEFF_READ_DATA	0x147
#define AD4170_COEFF_ADDRESS		 0x148
//#define AD4170_COEFF_WRRD_STB		0x14d
#define AD4170_DAC_SPAN			 0x150
#define AD4170_DAC_CHANNEL_EN		 0x152
#define AD4170_DAC_HW_TOGGLE_MASK	 0x154
#define AD4170_DAC_HW_LDAC_MASK		 0x156
#define AD4170_DAC_DATA(ch)		 (0x158 + 2 * (ch))
#define AD4170_DAC_SW_TOGGLE_TRIGGERS	 0x168
#define AD4170_DAC_SW_LDAC_TRIGGERS	 0x16a
#define AD4170_DAC_INPUTA(ch)		 (0x16c + 2 * (ch))
#define AD4170_DAC_INPUTB(ch)		 (0x17c + 2 * (ch))
#define AD4170_GPIO_MODE		 0x190
#define AD4170_OUTPUT_DATA		 0x192
#define AD4170_INPUT_DATA		 0x194


/* AD4170_REG_INTERFACE_CONFIG_A */
#define AD4170_SW_RESET_MSK		(BIT(7) | BIT(0))
#define AD4170_ADDR_ASCENSION_MSK	BIT(5)
#define AD4170_SDO_ENABLE_MSK		BIT(4)


/* AD4170_REG_INTERFACE_CONFIG_B */
#define AD4170_INTERFACE_CONFIG_B_SINGLE_INST_MSK		BIT(7)
#define AD4170_INTERFACE_CONFIG_B_SHORT_INSTRUCTION_MSK		BIT(3)
//#define AD4170_INTERFACE_CONFIG_B_SHORT_INSTRUCTION(x)		(((x) & 0x1) << 3)

/* AD4170_REG_INTERFACE_CONFIG_C */
#define AD4170_INTERFACE_CONFIG_C_CRC_MSK	GENMASK(7,6) | GENMASK (1,0)
#//define AD4170_INTERFACE_CONFIG_C_CRC(x)			(((~x) & 0x3) | (((x) << 6) & 0xC0))
//#define AD4170_INTERFACE_CONFIG_C_STRICT_REG_ACCESS_MSK	NO_OS_BIT(5)
//#define AD4170_INTERFACE_CONFIG_C_STRICT_REG_ACCESS(x)		(((x) & 0x1) << 5)
//#define AD4170_CRC8_POLYNOMIAL					0x7
//#define AD4170_CRC8_INITIAL_VALUE				0xA5

/* AD4170_REG_INTERFACE_STATUS_A */
//#define AD4170_INTERFACE_STATUS_A_NOT_READY_ERR_MSK		NO_OS_BIT(7)
//#define AD4170_INTERFACE_STATUS_A_CLOCK_COUNT_ERR_MSK		NO_OS_BIT(4)
//#define AD4170_INTERFACE_STATUS_A_CRC_ERR_MSK			NO_OS_BIT(3)
//#define AD4170_INTERFACE_STATUS_A_INVALID_ACCESS_ERR_MSK	NO_OS_BIT(2)
//#define AD4170_INTERFACE_STATUS_A_PARTIAL_ACCESS_ERR_MSK	NO_OS_BIT(1)
//#define AD4170_INTERFACE_STATUS_A_ADDR_INVALID_ERR_MSK		NO_OS_BIT(0)

/* AD4170_REG_PRODUCT_ID */
//#define AD4170_PRODUCT_ID_L_VALUE				0x40
//#define AD4170_PRODUCT_ID_H_VALUE				0x0

/* AD4190_REG_PRODUCT_ID */
//#define AD4190_PRODUCT_ID_L_VALUE				0x48
//#define AD4190_PRODUCT_ID_H_VALUE				0x0

/* AD4170_REG_DATA_STATUS */
// #define AD4170_DATA_STATUS_MASTER_ERR_S_MSK			NO_OS_BIT(7)
// #define AD4170_DATA_STATUS_POR_FLAG_S_MSK			NO_OS_BIT(6)
// #define AD4170_DATA_STATUS_RDYB_MSK				NO_OS_BIT(5)
// #define AD4170_DATA_STATUS_SETTLED_FIR_MSK			NO_OS_BIT(4)
// #define AD4170_DATA_STATUS_CH_ACTIVE_MSK			NO_OS_GENMASK(3,0)

/* AD4170_REG_PIN_MUXING */
#define AD4170_PIN_MUXING_CHAN_TO_GPIO_MSK		BIT(14)
#define AD4170_PIN_MUXING_DIG_AUX2_CTRL_MSK		GENMASK(7,6)
#define AD4170_PIN_MUXING_DIG_AUX1_CTRL_MSK		GENMASK(5,4)
#define AD4170_PIN_MUXING_SYNC_CTRL_MSK			GENMASK(3,2)
#define AD4170_PIN_MUXING_DIG_OUT_STR_MSK		BIT(1)
#define AD4170_PIN_MUXING_SDO_RDBY_DLY_MSK		BIT(0)

/* AD4170_REG_CLOCK_CTRL */
#define AD4170_CLOCK_CTRL_DCLK_DIVIDE_MSK		GENMASK(7,6)
#define AD4170_CLOCK_CTRL_CLOCKDIV_MSK			GENMASK(5,4)
#define AD4170_CLOCK_CTRL_CLOCKSEL_MSK			GENMASK(1,0)

/* AD4170_REG_STANDBY_CTRL */
#define AD4170_STANDBY_CTRL_STB_EN_CLOCK_MSK			BIT(8)
#define AD4170_STANDBY_CTRL_STB_EN_IPULLUP_MSK			BIT(7)
#define AD4170_STANDBY_CTRL_STB_EN_DIAGNOSTICS_MSK		BIT(6)
#define AD4170_STANDBY_CTRL_STB_EN_DAC_MSK			BIT(5)
#define AD4170_STANDBY_CTRL_STB_EN_PDSW1_MSK			BIT(4)
#define AD4170_STANDBY_CTRL_STB_EN_PDSW0_MSK			BIT(3)
#define AD4170_STANDBY_CTRL_STB_EN_VBIAS_MSK			BIT(2)
#define AD4170_STANDBY_CTRL_STB_EN_IEXC_MSK			BIT(1)
#define AD4170_STANDBY_CTRL_STB_EN_REFERENCE_MSK		BIT(0)

/* AD4170_REG_POWER_DOWN_SW */
#define AD4170_POWER_DOWN_SW_PDSW1_MSK				BIT(1)
#define AD4170_POWER_DOWN_SW_PDSW0_MSK				BIT(0)

/* AD4170_REG_ADC_CTRL */
#define AD4170_ADC_CTRL_PARALLEL_FILT_EN_MSK			BIT(8)
#define AD4170_ADC_CTRL_MULTI_DATA_REG_SEL_MSK			BIT(7)
#define AD4170_ADC_CTRL_CONT_READ_STATUS_EN_MSK			BIT(6)
#define AD4170_REG_CTRL_CONT_READ_MSK				GENMASK(5,4)
#define AD4170_REG_CTRL_MODE_MSK				GENMASK(3,0)

/* AD4170_REG_ERROR_EN and AD4170_REG_ERROR */
#define AD4170_ERROR_DEVICE_ERROR_MSK				BIT(15)
#define AD4170_ERROR_DLDO_PSM_ERR_MSK				BIT(13)
#define AD4170_ERROR_ALDO_PSM_ERR_MSK				BIT(12)
#define AD4170_ERROR_IOUT3_COMP_ERR_MSK				BIT(11)
#define AD4170_ERROR_IOUT2_COMP_ERR_MSK				BIT(10)
#define AD4170_ERROR_IOUT1_COMP_ERR_MSK				BIT(9)
#define AD4170_ERROR_IOUT0_COMP_ERR_MSK				BIT(8)
#define AD4170_ERROR_REF_DIFF_MIN_ERR_MSK			BIT(7)
#define AD4170_ERROR_REF_OV_UV_ERR_MSK				BIT(6)
#define AD4170_ERROR_AINM_OV_UV_ERR_MSK				BIT(5)
#define AD4170_ERROR_AINP_OV_UV_ERR_MSK				BIT(4)
#define AD4170_ERROR_ADC_CONV_ERR_MSK				BIT(3)
#define AD4170_ERROR_MM_CRC_ERR_MSK				BIT(1)
#define AD4170_ERROR_ROM_CRC_ERR_MSK				BIT(0)

/* AD4170_REG_CHANNEL_EN */
#define AD4170_CHANNEL(ch)					BIT(ch)

/* AD4170_REG_ADC_CHANNEL_SETUP */
#define AD4170_CHANNEL_SETUPN_REPEAT_N_MSK			GENMASK(15,8)
#define AD4170_CHANNEL_SETUPN_DELAY_N_MSK			GENMASK(6,4)
#define AD4170_CHANNEL_SETUPN_SETUP_N_MSK			GENMASK(2,0)

/* AD4170_REG_ADC_CHANNEL_MAP */
#define AD4170_CHANNEL_MAPN_AINP_MSK				GENMASK(12,8)
#define AD4170_CHANNEL_MAPN_AINM_MSK				GENMASK(4,0)

/* AD4170_REG_ADC_SETUPS_MISC */
#define AD4170_ADC_SETUPS_MISC_CHOP_IEXC_MSK			GENMASK(15,14)
#define AD4170_ADC_SETUPS_MISC_CHOP_ADC_MSK			GENMASK(9,8)
#define AD4170_ADC_SETUPS_MISC_BURNOUT_MSK			GENMASK(1,0)

/* AD4170_REG_ADC_SETUPS_AFE */
#define AD4170_ADC_SETUPS_AFE_REF_BUF_M_MSK			GENMASK(11,10)
#define AD4170_ADC_SETUPS_AFE_REF_BUF_P_MSK			GENMASK(9,8)
#define AD4170_ADC_SETUPS_AFE_REF_SELECT_MSK			GENMASK(6,5)
#define AD4170_ADC_SETUPS_AFE_BIPOLAR_MSK			BIT(4)
#define AD4170_ADC_SETUPS_AFE_PGA_GAIN_MSK			GENMASK(3,0)

/* AD4170_REG_ADC_SETUPS_FILTER */
#define AD4170_ADC_SETUPS_POST_FILTER_SEL_MSK			GENMASK(7,4)
#define AD4170_ADC_SETUPS_FILTER_TYPE_MSK			GENMASK(3,0)

/* AD4170_REG_CURRENT_SOURCE */
#define AD4170_CURRENT_SOURCE_I_OUT_PIN_MSK			GENMASK(12,8)
#define AD4170_CURRENT_SOURCE_I_OUT_VAL_MSK			GENMASK(2,0)

/* AD4170_REG_REF_CONTROL */
#define AD4170_REF_CONTROL_REF_EN_MSK				BIT(0)

/* AD4170_REG_FIR_CONTROL */
#define AD4170_FIR_CONTROL_IIR_MODE_MSK				BIT(15)
#define AD4170_FIR_CONTROL_FIR_MODE_MSK				GENMASK(14,12)
#define AD4170_FIR_CONTROL_COEFF_SET_MSK			BIT(10)
#define AD4170_FIR_CONTROL_FIR_LENGTH_MSK			GENMASK(6,0)

/* AD4170_REG_DAC_SPAN */
#define AD4170_REG_DAC_SPAN_DAC_GAIN_MSK			BIT(0)

/* AD4170_REG_DAC_CHANNEL_EN */
#define AD4170_REG_DAC_CHANNEL_EN_DAC_EN_MSK			BIT(0)

/* AD4170_REG_DAC_HW_TOGGLE_MASK */
#define AD4170_REG_DAC_HW_TOGGLE_MASK_HW_TOGGLE_EN_MSK		BIT(0)

/* AD4170_REG_DAC_HW_LDAC_MASK */
#define AD4170_REG_DAC_HW_LDAC_MASK_HW_LDAC_EN_MSK		BIT(0)

/* AD4170_REG_DAC_DATA */
#define AD4170_REG_DAC_DATA_MSK					GENMASK(11,0)

/* AD4170_REG_DAC_SW_TOGGLE_TRIGGERS */
#define AD4170_REG_DAC_SW_TOGGLE_TRIGGERS_SW_TOGGLE_MSK		BIT(0)

/* AD4170_REG_DAC_SW_LDAC_TRIGGERS */
#define AD4170_REG_DAC_SW_LDAC_TRIGGERS_SW_LDAC_EN_MSK		BIT(0)

#define AD4170_CHANNEL_INDEX_MAX			8
#define AD4170_NUM_SETUPS				8
#define AD4170_NUM_CURRENT_SOURCE			4
#define AD4170_FIR_COEFF_MAX_LENGTH			72



enum ad4170_dig_aux2_ctrl {
	AD4170_DIG_AUX2_DISABLED,
	AD4170_DIG_AUX2_LDAC,
	AD4170_DIG_AUX2_SYNC,
	AD4170_DIG_AUX2_MODOUT
};


enum ad4170_dig_aux1_ctrl {
	AD4170_DIG_AUX1_DISABLED,
	AD4170_DIG_AUX1_RDY,
	AD4170_DIG_AUX1_SYNC,
	AD4170_DIG_AUX1_MODOUT
};


enum ad4170_sync_ctrl {
	AD4170_SYNC_DISABLED,
	AD4170_SYNC_STANDARD,
	AD4170_SYNC_ALTERNATE
};


enum ad4170_dclk_div {
	AD4170_DCLKDIVBY1,
	AD4170_DCLKDIVBY2,
	AD4170_DCLKDIVBY4,
	AD4170_DCLKDIVBY8
};


enum ad4170_mclk_div {
	AD4170_CLKDIVBY1,
	AD4170_CLKDIVBY2,
	AD4170_CLKDIVBY4,
	AD4170_CLKDIVBY8
};



enum ad4170_mode {
	AD4170_MODE_CONT,
	AD4170_MODE_CONT_FIR,
	AD4170_MODE_CONT_IIR,
	AD4170_MODE_SINGLE = 0x4,
	AD4170_MODE_STANDBY,
	AD4170_MODE_POWER_DOWN,
	AD4170_MODE_IDLE,
	AD4170_MODE_SYS_OFFSET_CAL,
	AD4170_MODE_SYS_GAIN_CAL,
	AD4170_MODE_SELF_OFFSET_CAL,
	AD4170_MODE_SELF_GAIN_CAL
};

struct ad4170_state;

static const unsigned int ad4170_reg_size[] = {
	[AD4170_INTERFACE_CONFIG_A_REG] = 1,
	[AD4170_INTERFACE_CONFIG_B_REG]	= 1,
	[AD4170_INTERFACE_CONFIG_C_REG]	= 1,
	[AD4170_INTERFACE_STATUS_A_REG]	= 1,
	[AD4170_STATUS_REG]	= 1,
	[AD4170_DATA_16b]	= 2,
	[AD4170_DATA_16b_STATUS]	= 2,
	[AD4170_DATA_24b]	= 3,
	[AD4170_DATA_24b_STATUS]	= 3,
	[AD4170_PIN_MUXING]	= 2,
	[AD4170_CLOCK_CTRL]	= 2,
	[AD4170_STANDBY_CTRL]	= 2,
	[AD4170_POWER_DOWN_SW]	= 2,
	[AD4170_ADC_CTRL]	= 2,
	[AD4170_ERROR_EN]	= 2,
	[AD4170_ERROR]	= 2,
	[AD4170_CHANNEL_EN]	= 2,
	[AD4170_REF_CONTROL]	= 2,
	[AD4170_V_BIAS]	= 2,
	[AD4170_I_PULLUP]	= 2,
	[AD4170_FIR_CONTROL]	= 2,
	[AD4170_COEFF_WRITE_DATA]	= 2,
	[AD4170_COEFF_ADDRESS]	= 2,
	[AD4170_DAC_SPAN]	= 2,
	[AD4170_DAC_CHANNEL_EN]	= 2,
	[AD4170_DAC_HW_TOGGLE_MASK]	= 2,
	[AD4170_DAC_HW_LDAC_MASK]	= 2,
	[AD4170_DAC_SW_TOGGLE_TRIGGERS]	= 2,
	[AD4170_DAC_SW_LDAC_TRIGGERS]	= 2,
	[AD4170_GPIO_MODE]	= 2,
	[AD4170_OUTPUT_DATA]	= 2,
	[AD4170_INPUT_DATA]	= 2
};